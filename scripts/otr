#!/bin/bash

while true
do
	clear
	echo "On the Road Development Tool"
	echo "----------------------------"
	echo "1) Create new container"
	echo "2) Destroy a container"
	echo "3) Use a container"
	echo "4) About On The Road"
	echo "5) Help"
	echo "0) Exit"
	echo

	read input

	if [ "$input" == "0" ]; then
		clear
		exit
	fi

	if [ "$input" == "4" ]; then
		clear
		echo "----------------------------"
		echo "On The Road Development Tool"
		echo
		echo "Copyright (c) 2017 Emanuele Sorce"
		echo
		echo "Use this tool to easily develop applications inside an Ubuntu Touch device"
		echo
		echo "This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version."
		echo "This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details."
		echo "You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>."
		echo
		echo "Press something to continue..."
		read -n 1 -s
	fi

	if [ "$input" == "1" ]; then
		clear
		echo "----------------------"
		echo "Create a new container"
		echo
		echo "Insert a name for the new container:"
		echo "Name must be of form ([a-z0-9][a-z0-9+.-]+)."
		echo
		read newname
		clear
		if [ -d "/home/phablet/.cache/libertine-container/$newname/rootfs" ]; then
			clear
			echo "----------------------------"
			echo "The container already exits!"
			echo
			echo "Press something to continue..."
			read -n 1 -s
		else
			clear
			echo "----------------------------"
			echo "Installing the new container"
			echo
			echo "This could take a while. There is no need for an internet connection."
			echo "Creating into: /home/phablet/.cache/libertine-container/$newname"
			echo
			echo "log:"
			echo
			mkdir -p "/home/phablet/.cache/libertine-container/$newname"
			cp -v /opt/click.ubuntu.com/ontheroad.emanuelesorce/current/rootfs.tar.bz2 "/home/phablet/.cache/libertine-container/$newname/"
			bzip2 -d  "/home/phablet/.cache/libertine-container/$newname/rootfs.tar.bz2"
			tar xvf "/home/phablet/.cache/libertine-container/$newname/rootfs.tar" -C "/home/phablet/.cache/libertine-container/$newname/"
			rm "/home/phablet/.cache/libertine-container/$newname/rootfs.tar"
			if [ wc -l < ~/.local/share/libertine/ContainersConfig.json < 5]; then
				rm ~/.local/share/libertine/ContainersConfig.json
				touch ~/.local/share/libertine/ContainersConfig.json
			fi
			
			if [ ! -s ~/.local/share/libertine/ContainersConfig.json ]; then
				touch ~/.cache/ontheroad.emanuelesorce/temp/isnew
				echo "{" > ~/.local/share/libertine/ContainersConfig.json
				echo "	\"containerList\": [" >> ~/.local/share/libertine/ContainersConfig.json
				echo "	]," >> ~/.local/share/libertine/ContainersConfig.json
				echo "	\"defaultContainer\":\"$newname\"" >> ~/.local/share/libertine/ContainersConfig.json
				echo "}" >> ~/.local/share/libertine/ContainersConfig.json
			fi
			mkdir ~/.cache/ontheroad.emanuelesorce/temp
			cp -v ~/.local/share/libertine/ContainersConfig.json ~/.cache/ontheroad.emanuelesorce/temp/
			sed -n '1,2p' ~/.cache/ontheroad.emanuelesorce/temp/ContainersConfig.json > ~/.local/share/libertine/ContainersConfig.json
			echo "		{" >> ~/.local/share/libertine/ContainersConfig.json
			echo "			\"distro\":\"vivid\"," >> ~/.local/share/libertine/ContainersConfig.json
			echo "			\"id\":\"$newname\"," >> ~/.local/share/libertine/ContainersConfig.json
			echo "			\"InstallStatus\":\"ready\"," >> ~/.local/share/libertine/ContainersConfig.json
			echo "			\"InstalledApps\":[]," >> ~/.local/share/libertine/ContainersConfig.json
			echo "			\"multiarch\":\"disabled\"," >> ~/.local/share/libertine/ContainersConfig.json
			echo "			\"name\":\"OnTheRoad-$newname\"," >> ~/.local/share/libertine/ContainersConfig.json
			echo "			\"type\":\"chroot\"" >> ~/.local/share/libertine/ContainersConfig.json

			if [ -f ~/.cache/ontheroad.emanuelesorce/temp/isnew ]; then
				echo "		}" >> ~/.local/share/libertine/ContainersConfig.json
				rm ~/.cache/ontheroad.emanuelesorce/temp/isnew
			else
				echo "		}," >> ~/.local/share/libertine/ContainersConfig.json
			fi
			sed -n '3,$p' ~/.cache/ontheroad.emanuelesorce/temp/ContainersConfig.json >> ~/.local/share/libertine/ContainersConfig.json
			rm ~/.cache/ontheroad.emanuelesorce/temp/ContainersConfig.json

			if [ -d "/home/phablet/.cache/libertine-container/$newname/rootfs" ]; then
				clear
				echo "------------------------------"
				echo "Container created successfully"
				echo
				echo "Press something to continue..."
				read -n 1 -s
			else
				rm -r "/home/phablet/.cache/libertine-container/$newname"
				clear
				echo "-------------------------------------------"
				echo "Error occurred while creating the container"
				echo
				echo "Press something to continue..."
				read -n 1 -s
			fi
		fi
	fi

	if [ "$input" == "5" ]; then
		clear
		echo "On The Road Manual"
		echo "------------------"
		echo "On The Road uses chroot containers to have environments where the hacker can develop freely"
		echo "Remember to run the otr-ssh command to enter the AppArmor-free shell, then you can run 'otr'. Running only 'otr' without 'otr-ssh' and entering a container will BREAK the container!"
		echo "To create a new container, select Create New Container in the main menu then follow instructions."
		echo "Once a container is created you can use it going in the Use Container section of the main menu"
		echo "Another point is the seamless integration with Libertine, you can use your Libertine containers with On The Road out of the box, and viceversa if you wish"
		echo
		echo "Press something to continue..."
		read -n 1 -s
	fi

	if [ "$input" == "2" ]; then
		clear
		echo "-------------------"
		echo "Destroy a container"
		echo
		echo "What container you want to destroy?"
		echo "Container list:"
		containerlist=$(libertine-container-manager list)
		echo "$containerlist"
		echo

		read destroycontainer

		if [ -d "/home/phablet/.cache/libertine-container/$destroycontainer" ]; then
			clear
			echo "-------------"
			echo "Destroying..."
			echo
			libertine-container-manager destroy -i $destroycontainer
			if [ ! -d "/home/phablet/.cache/libertine-container/$destroycontainer" ]; then
				clear
				echo "--------------------------------"
				echo "Container successfully destroyed"
				echo
				echo "Press something to continue..."
				read -n 1 -s
			else
				clear
				echo "------------------------"
				echo "Cannot destroy container"
				echo
				echo "Press something to continue..."
				read -n 1 -s
			fi
		else
			clear
			echo "------------------------------------"
			echo "There is no container with that name"
			echo
			echo "Press something to continue..."
			read -n 1 -s
		fi
	fi

	if [ "$input" == "3" ]; then
		clear
		echo "---------------"
		echo "Use a container"
		echo
		echo "What container you want to use?"
		echo "container list:"
		containerlist=$(libertine-container-manager list)
        	echo "$containerlist"
		echo

		read contouse

		if [ ! -d "/home/phablet/.cache/libertine-container/$contouse" ]; then
			clear
			echo "-----------------------------"
			echo "That container doesn't exist!"
			echo
			echo "Press something to continue..."
			read -n 1 -s
		else
			clear
			echo "-----------------------"
			echo "$contouse"
			echo
			echo "1) Open a bourne again shell (BASH)"
			echo "2) Libertine launch"
			echo
			echo "3) Back"
			echo

			read input2

			if [ "$input2" == "1" ]; then
				clear
				libertine-container-manager exec -i $contouse -c /bin/bash
			fi

			if [ "input2" == "2" ]; then
				clear
				libertine-launch -i $contouse
			fi
		fi
	fi
done
